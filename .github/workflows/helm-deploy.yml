name: Helm Deploy

on:
  workflow_call:
    inputs:
      environment:
        description: "Environment to deploy to (sandbox, staging, production)"
        required: true
        type: string
      app_name:
        description: "Name of the app to deploy"
        required: false
        type: string
        default: ${{ github.event.repository.name }}
      namespace:
        description: "Kubernetes namespace to deploy to"
        required: false
        type: string
        default: ${{ inputs.environment }}
      helm_chart:
        description: "Helm chart to use"
        required: false
        type: string
        default: "oci://ghcr.io/forus-coop/forus-app"
      helm_values_file:
        description: "Path to the Helm values file"
        required: false
        type: string
        default: "./helm/values.yaml"
      image_tag:
        description: "Tag of the Docker image to deploy"
        required: true
        type: string
      image_repository:
        description: "Repository of the Docker image to deploy"
        required: false
        type: string
        default: ${{ github.event.repository.name }}
      aws_region:
        description: "AWS region"
        required: false
        type: string
        default: "us-west-2"

jobs:
  deploy:
    runs-on:
      group: ${{ inputs.environment }}
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Format app name (repository name)
        id: format-app-name
        run: |
          # Replace underscores and other non-hyphen characters with hyphens
          ORIGINAL_REPO="${{ github.event.repository.name }}"
          FORMATTED_APP=$(echo "$ORIGINAL_REPO" | tr '_' '-' | tr '[:upper:]' '[:lower:]')
          echo "formatted_app=$FORMATTED_APP" >> $GITHUB_OUTPUT
          echo "Original repository name: $ORIGINAL_REPO, Formatted app name: $FORMATTED_APP"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws_region }}
          # Note: You'll need to set these as secrets or use OIDC
          # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # Or use role-to-assume with OIDC
          # role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Retrieve Kubeconfig for Sandbox
        if: inputs.environment == 'sandbox'
        env:
          KUBECONFIG_SECRET: ${{ secrets.ORG_KUBECTL_CONFIG_BASE64_SANDBOX }}
        run: |
          mkdir -p ~/.kube
          echo "$KUBECONFIG_SECRET" | base64 --decode > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Retrieve Kubeconfig for Staging
        if: inputs.environment == 'staging'
        env:
          KUBECONFIG_SECRET: ${{ secrets.ORG_KUBECTL_CONFIG_BASE64_STAGING }}
        run: |
          mkdir -p ~/.kube
          echo "$KUBECONFIG_SECRET" | base64 --decode > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Retrieve Kubeconfig for Production
        if: inputs.environment == 'production'
        env:
          KUBECONFIG_SECRET: ${{ secrets.ORG_KUBECTL_CONFIG_BASE64_PRODUCTION }}
        run: |
          mkdir -p ~/.kube
          echo "$KUBECONFIG_SECRET" | base64 --decode > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: "latest"

      - name: Login to Helm registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io/forus-coop --username ${{ github.repository_owner }} --password-stdin

      - name: Deploy with Helm
        run: |
          helm upgrade ${{ steps.format-app-name.outputs.formatted_app }} ${{ inputs.helm_chart }} \
            --install \
            --wait \
            --atomic \
            --namespace=${{ inputs.namespace }} \
            --set tag=${{ inputs.image_tag }} \
            --values=${{ inputs.helm_values_file }}
